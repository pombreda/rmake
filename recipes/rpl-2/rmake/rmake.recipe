#
# Copyright (c) SAS Institute Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#


class RmakeRecipe(CPackageRecipe):
    name = 'rmake'
    version = '2.0.0'

    buildRequires = [
        'chkconfig:runtime',
        'conary:python',
        'conary-repository:python',
        'desktop-file-utils:runtime',
        'info-rmake-chroot:user',
        'info-rmake:user',
        'libcap:devel',
        'm2crypto:python',
        'pygtk:python',
        'python:devel',
    ]

    def setup(r):
        r.addMercurialSnapshot()

        r.addSource('server.conf', dest='%(sysconfdir)s/rmake/serverrc',
                    macros=True)
        r.addSource('client.conf', dest='%(sysconfdir)s/rmake/rmakerc',
                    macros=True)


        r.InitialContents('%(sysconfdir)s/rmake/(serverrc|rmakerc)')

        r.Make('libdir=%(libdir)s')
        r.MakeInstall('libdir=%(libdir)s')

        r.MakeDirs('%(localstatedir)s/{lib,log,run}/rmake')
        r.MakeDirs('%(localstatedir)s/rmake', mode=0700)
        r.MakeDirs('%(localstatedir)s/rmake/{chroots,archive,chrootcache}',
                   mode=0700)
        r.MakeDirs('%(servicedir)s/rmake', mode=0700)
        r.MakeDirs('%(sysconfdir)s/rmake/{server,client}.d')
        r.Ownership('rmake', 'rmake',
                    '%(localstatedir)s/rmake',
                    '%(localstatedir)s/rmake/chroots',
                    '%(localstatedir)s/rmake/archive',
                    '%(localstatedir)s/rmake/chrootcache',
                    '%(localstatedir)s/(lib|log|run)/rmake',
                    '%(servicedir)s/rmake',
                    '%(libexecdir)s/rmake')
        r.ExcludeDirectories(exceptions='%(localstatedir)s/(lib|log|run)/rmake')
        r.ExcludeDirectories(exceptions='%(localstatedir)s/rmake')
        r.ExcludeDirectories(exceptions='%(localstatedir)s/rmake/chroots')
        r.ExcludeDirectories(exceptions='%(localstatedir)s/rmake/archive')
        r.ExcludeDirectories(exceptions='%(localstatedir)s/rmake/chrootcache')
        r.ExcludeDirectories(exceptions='%(servicedir)s/rmake')
        r.ExcludeDirectories(exceptions='%(sysconfdir)s/rmake')
        r.ExcludeDirectories(exceptions='%(sysconfdir)s/rmake/client.d')
        r.ExcludeDirectories(exceptions='%(sysconfdir)s/rmake/server.d')

        r.ComponentSpec('libexec', 'chroothelper',
                                   '%(localstatedir)s/rmake',
                                   '%(localstatedir)s/rmake/.*',
                                   '%(localstatedir)s/run/rmake')
        r.SetModes('%(libexecdir)s/rmake/chroothelper', 04755)
        r.Requires('rmake:libexec', 'rootfactory.py')
        r.Requires('busybox:runtime',
                   '%(libexecdir)s/rmake/chroothelper')
        r.Requires('iproute:runtime', '.*/site-packages/rmake/lib/procutil.*')
        r.Requires(exceptDeps='python: (epdb|rmake.cmdline.password)')
        r.ComponentSpec('gtk', 'password.py(|c|o)')
        # make gtk require rmake:runtime
        r.ComponentRequires({'runtime' : ['gtk']})
        r.ComponentProvides('%(version)s')
        r.UtilizeUser('rmake-chroot', '%(libexecdir)s/rmake/chroothelper')
        r.UtilizeGroup('rmake-chroot', '%(libexecdir)s/rmake/chroothelper')
        r.Doc('extra/plugins/*.py')

        ## package rmake-proxy
        r.macros.proxydir = '%(servicedir)s/rmake-proxy'
        for x in [ 'cscache', 'contents', 'tmp' ]:
            dir = '%%(proxydir)s/%s' % x
            r.MakeDirs(dir)
            r.Ownership('apache', 'apache', dir)
            r.SetModes(dir, 0700)
        r.PackageSpec('rmake-proxy',
                '%(proxydir)s/',
                '/etc/conary-repos/rmake-proxy.cnr',
                '/etc/conary-repos/vhosts/rmake.proxy',
                '/etc/cron.daily/rmake-proxy-cleanup',
                '/etc/nginx/conf.d/rmake-proxy.conf',
                '/etc/rmake/server.d/proxy',
                )

        ## package rmake-repos
        r.macros.reposdir = '%(servicedir)s/rmake-repos'
        for x in [ 'cscache', 'contents', 'tmp', 'db' ]:
            dir = '%%(reposdir)s/%s' % x
            r.MakeDirs(dir)
            r.Ownership('apache', 'apache', dir)
            r.SetModes(dir, 0700)
        r.PackageSpec('rmake-repos',
                '%(reposdir)s/',
                '/etc/conary-repos/rmake-repos.cnr',
                '/etc/conary-repos/vhosts/rmake.repos',
                '/etc/cron.daily/rmake-repos-cleanup',
                '/etc/nginx/conf.d/rmake-repos.conf',
                '/etc/rmake/server.d/repos',
                '/usr/sbin/rmake-resetrepos',
                )

        r.ComponentSpec('config', '/etc/conary-repos/vhosts/')
        r.Requires('conary-repository:server', '/etc/nginx/')
        r.Requires('/usr/sbin/nginx', '/etc/nginx/')

        ## package rmake-node
        # This package has files required on individual build nodes
        # controlled by a head node
        r.PackageSpec('rmake-node',
                      '%(initdir)s/rmake-node',
                      '%(sbindir)s/rmake-node',
                      '%(mandir)s/.*rmake-node.*')
        r.Requires('rmake:python(%(version)s)', '%(sbindir)s/rmake-node')


        ## package rmake-multinode-server
        # This package has files required on the head node that controls
        # all the individual build nodes that are connected to it
        r.Create('%(sysconfdir)s/rmake/client.d/00_rmake_multinode',
                 contents='rmakeUrl https://localhost')
        r.PackageSpec('rmake-multinode-server',
                      '.*/rmake/plugins/multinode/.*',
                      '%(sysconfdir)s/rmake/client.d/00_rmake_multinode')
        r.Requires('rmake:python(%(version)s)', 'rmake_node/__init__.py')
        # Avoid rpl-2-py26 <-> fl:2 compatibility issues
        r.Requires(exceptDeps='file: /etc/init.d/functions')
