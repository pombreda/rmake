Changes in @NEW@:
  o Server Changes:
     * rMake is now set up for committing multiple jobs at once.  This will
       not be exposed through the command line until some conary changes have
       been made to ensure that this will work in all cases.  However, the
       helper client has been enabled to allow this behavior currently.
       (RMK-340)
     * rMake now updates the troves listed as the "binary" troves for a job
       after a commit - it now points to the versions that were cloned in.
       This was done as a part of restart work (RMK-3).
  o Client Changes:
     * rMake now supports a initial version of a "restart" command.  You
       can pass the restart command a jobId and it will act as if you had
       rerun that build command from the command line.  (RMK-3)
     * rMake changeset can now take troveSpec parameters.
  o Bug Fixes:
     * rMake now works correctly with checkouts that have run "cvc refresh".
       (RMK-354)
     * rMake --reuse works once again when the chroot has not changed at all
       between operations.  Also removed an error that could occur in the
       output when erasing troves with --reuse. (RMK-364)
     * Turn off repository caching when building groups as it is
       broken. (RMK-377)

Changes in 1.0.6:
  o Server Changes:
     * The rMake server is now forking, making it more responsive to multiple
       simultaneous requests.
     * Dependencies are now resolved in forked processes in slots, making
       the builder process more responsive.
     * Troves are now loaded in sorted order. (RMK-344)
     * Troves are now split into two categories of failed troves, 
       'Failed' and 'Unbuildable'.  Unbuildable troves are caused when another
       trove in the job fails, causing this trove to fail.  That is, they
       are not due directly to a failure to build but of a failure of other
       troves in the job to build.  This distinction is useful when building
       large jobs and trying to figure out what trove is at the heart of a 
       set of failed troves.
  o Bug Fixes:
     * Fixed a bug that caused a traceback when build requirements were
       missing.
     * Fixed a bug in dep resolution that caused troves that were delayed
       due to runtime-only requirements to not be built.
     * allow cleanAfterCook in strictMode.
     * Don't rerun tagscripts when running the "chroot" command.
     * Don't time out when creating chroots after 3 minutes.  The chroot
       is running tag scripts.  Depending on the load and the tag scripts
       in question, this could take much longer.   Allow a generous 2 hours.
       (RMK-363)
     * rMake is now better able to stop jobs that are creating chroots and
       caching changesets. (RMK-342)
     * Improved logging for commands in their respective command files - errors
       are now logged there are well as passed back with the chroot. (RMK-356)
     * Handle case where where user tries to stop a command that is no longer
       active. (RMK-367)
     * Added sanity checks for buildDir for rMake.  This should cause 
       configuration errors to show up when you start rMake instead of in 
       the middle of a build.  (RMK-343)

Changes in 1.0.5:
  o Architecture Changes:
     * rMake now supports plugins, located in /etc/rmake/plugins.d (RMK-186).
     * The builder has been split out into builder and dispatcher to enable
       support for multiple build nodes.
     * Trove builds are now wrapped in a Command object which monitors
       the actual build.  This is a step towards pushing all build actions
       to be done in separate processes.
     * You can now perform multiple cook w/in a single job at the same
       time by setting the "slots" configuration variable to > 1.

  o Client changes:
     * You can now debug failures in a chroot by running 
       "rmake chroot <chroot name>".  You can see the existing chroots by
       running "rmake list chroots".
     * You can archive a chroot by running "rmake archive <chroot> [<newname>]."
       That will ensure the chroot does not get deleted by future builds.
       The chroot will then be available at "archive/<chroot>".
     * You can delete a chroot by running "rmake clean <chroot>"
     * StrictMode is now default True - to get conary to use your local
       conary configuration files, you'll have to set it to False.
     * rMake now requires conary version 1.0.42 or 1.1.15 to run.
     * rMake no longer allows redirects to resolve build requirements. (RMK-337)
     * rMake commits no longer have a "cloned from" reference back to the
       rMake repository - the rMake repository is transient.

  o Server Changes:
     * Dependency resolution against a particular group is now cached.
     * rMake now cleans out the server environment when entering the rmake
       chroot, so that it cannot pollute the behavior of any tag 
       scripts. (RMK-332)

  o Bug Fixes:
     * StrictMode now allows signatureKeys.
     * StrictMode now reads in conary configuration files that are
       installed in the root and uses them for buildcfg (RMK-295).
     * Add more error handling for the case when a build fails after
       being removed from the queue but before starting. (RMK-312)
     * rMake now raises an error when an invalid context is used. (RMK-325)
     * rMake now prints a more useful error message when the internal
       repository dies. (RMK-281)
     * rMake now handles subdirectories and the new file removal syntax.
       (RMK-323) (RMK-296)

Changes in 1.0.4:
  o Bug Fixes:
     * Drop supplemental group permissions in the chroot and in the server 
       (CVE-2007-0536).

Changes in 1.0.3:
  o Server Changes:
     * rMake now supports reusable chroots. Use the --reuse option or the
       reuseRoots config option to cause rMake to modify roots instead of
       starting from scratch when performing builds. (RMK-201)
     * rMake now adds default build requirements to the build requirements 
       recorded for a package when it is built, even if those requirements
       are not listed explicitly in the recipe.
     * rMake now also caches tarballs (and patches and so on) for the packages
       it builds (RMK-250).

  o Client Changes:
     * poll has been renamed "watch".  Poll should continue to work in order 
       to provide backwards compatibility.
     * added read-only repository cache support, as well as a way to get the
       paths to the files in the content store.

  o Bug Fixes:
     * --tracebacks now actually displays tracebacks for failures.
     * rMake will now return a non-zero exit value if a build fails when 
       polling and not committing.
     * rMake buildgroup works again. (RMK-287)

Changes in 1.0.2:
  o Bug Fixes:
     * Conary's new ability to commit relative changesets caused
       rMake to fail because it expected absolute changesets.  rMake
       will now handle relative changesets. (RMK-277)
     * The repository cache now works with loadInstalled, which would
       cause the cache to break earlier. (RMK-276, RMK-278)
     * rMake will now return a non-zero exit value if a commit fails. (RMK-279)

Changes in 1.0.1:
  o Client Changes:
     * rMake now has a new, friendlier usage message and a help command.
       (RMK-268)
     * rMake now installs the packages for buildreqs, as well as for dep 
       resolution. (RMK-189)
     * rMake now cleans up temporary recipe downloads that used to be 
       left in /tmp. (RMK-270)
     * rMake now caches file contents, which speeds up repeated loads of
       the same source package. (RMK-249)

Changes in 1.0:
  o Changed name to 1.0

Changes in 0.9.7 (Release candidate 3):
  o Bug Fixes:
    * loadInstalled in the root will now work correctly (as long as
      the package for the trove in question is installed, not just
      its components). (RMK-259)
    * rmake config output can now be used untouched as an input for
      rmake, now that the default uuid output can be parsed. (RMK-247)
    * chrooting into the build root and running conary will work out 
      of the box even if your context is None. (RMK-246)
    * recommitting already committed builds does not revert state (RMK-252)
    * Don't error unnecessarily when setting flavors when cooking (for 
      example, when setting flags that are unknown). (RMK-243)
    * Fix rMake behavior with multiple resolveTroves entries (before it would
      only use the first one). (RMK-269)
    * Rmake no longer tracebacks when resolveTrovesOnly is True and a dep 
      resolution failure occurs. (RMK-261)
    * rMake no longer delays building itself if the only potential dependency
      it has is circular, e.g. if avahi requires itself be installed to 
      build.  It also accurately displays the number of troves causing the
      delay. (RMK-245)

Changes in 0.9.6 (Release candidate 2):
  o Bug Fixes:
    * rMake no longer uses RMAKE_PATH and CONARY_PATH when loaded.  If you
      wish to make rmake use a particular rMake and Conary, you 
      must instead put them in the PYTHONPATH environment variable.
    * rMake now merges conary configuration files better.  Before, if you
      were using a conary earlier than 1.0.33 (or 1.1.6), it might for example
      think you were overriding installLabelPath in your rmakerc when you 
      weren't.
    * Fix rMake behavior when dealing with unparseable conary version strings.
    * Configuration handling has changed slightly - all values in rmake 
      configuration files override values in conary configuration files - a 
      value in /etc/rmakerc overrides a value in a context in a conaryrc file.

Changes in 0.9.5 (Release candidate 1):
  This is a release candidate version of rMake.  If this version does not have
  major bugs in it, it will be rereleased as rMake version 1.0.

  o Bug Fixes:
    * rMake now transmits all text logs encoded in base-64 when transmitting 
       them over xmlrpc so no attempt is made to encode non-utf8 character as
       utf8. (RMK-137)
    * CvcErrors and ConaryErrors found when calling setup or commit for local
      cooks are now wrapped. (RMK-191)
    * Don't copy in entitlements, they should not generally be used when
      building, instead, username and passwords should be used (RMK-196).
    * Fixed a bug when internal errors cause a build to fail - conary will now
      store that internal error correctly (RMK-203).
    * Sometimes chroot processes will not die nicely, and so chroot cleanups
      will fail.  In that case, make sure rMake finds that case earlier, so
      that after all rogue rMake processes are cleaned up, rMake can clean
      up the root. (RMK-216)
    * Prioritize troves that are runtime reqs of buildreqs for other packages
      that are being built - this should avoid some of the waiting that can
      occur when many packages depend on the same runtime req of
      buildreqs.  (RMK-218)
    * Require busybox, and use it to avoid relying on a working chroot when 
      cleaning up the chroot. (RMK-216).
    * Don't bother cleaning up the chroot for group cooks that are using a
      fake chroot. (also part of RMK-216)
    * Fully mark troves as built/failed before beginning dep resolution 
      for the next set of troves. (RMK-217)
    * Dep resolution when no resolveTroves are set now uses the same intraTrove
      dependency resolution algorithm as the resolveTroves code (RMK-220).
    * rMake now handles --flavor correctly on x86_64 boxes - by just overriding
      the flavors specified in the installLabelPath with the given flavor,
      not reducing the flavor list to one. (RMK-228)
    * rMake now handles --config to specify a change to the build configuration.
      (RMK-192)
    * Only one job is dequeued at once now. (RMK-227)
    * rMake now handles building a recipe with no CONARY file when a recipe 
      template is used (RMK-233).

  o Client Changes:
    * rMake now supports the cleanAfterCook configuration - if set to False,
      the build root will not be cleaned after a successful build.  (RMK-194)
    * rMake now complains if you try to commit a source component when a 
      commit to the upstream version has been done (RMK-157).
    * Added a --commit option to build and poll.  "rmake commit" also waits
      for the build to complete if it has not already. (RMK-146)
    * add some verbosity to buildlogs during dep resolution
    * Rmake now prints out a message for each trove it tries to resolve 
      deps for when resolving build req dependencies. (RMK-219)
    * rMake now takes a --build-config-file, --server-config-file, and 
      --conary-config-file to specify the config files to read for the 
      build, server, and conary config files. (RMK-192)
    * You can now set contexts in rmake config files.  Values set in rmake
      contexts will override values in conary contexts (RMK-58).
    * rMake now displays trove counts when displaying the trove lists in
      query output. (RMK-144)
    * Added --source-only flag to "rmake commit", to commit only sources
      from a successful build.  (RMK-151)
    * Added --no-clean and --macro flags to "rmake build" to match 
      cvc. (RMK-212)

Changes in 0.9:

  o Client Changes:
    * Add an explicit error message for redirect and group recipes, which 
      rMake cannot cook. (RMK-9)
    * rMake now tells you when a job is queued. (RMK-88)
    * rMake now has has callbacks to tell you how a commit is proceeding.  It
      also now asks you for a message for a recipe build on commit, not when 
      you start to build the recipe (depends on conary 1.0.30).
    * added a strictMode config option that does not copy in configuration
      files or conary from your local system, but instead uses the conary
      and configuration in the chroot (RMK-167).
    * Added resolveTrovesOnly config option, it does not use your 
      installLabelPath to resolve dependencies but instead limits itself to 
      only the resolveTroves list (RMK-166).
    * You can now build groups and redirect recipes with rMake, as long as
      the group or redirect recipe is the only this requested to be built
      in the job (RMK-125).
    * As a part of the changes needed for building groups, recursively building
      the contents of a group has been renamed "buildgroup".
    * You can now commit partial builds (if the commit fails, rMake will
      move the status back to failed).
    * rMake now will sign troves with the available signature keys on commit
      (RMK-149).
    * rMake client config is now renamed to rmakerc, and reads
      /etc/rmakerc, ~/.rmakerc, and ./rmakerc on startup.
    * rMake now supports the CONARY file format used in conary 
      1.0.31 and forward. (RMK-176)
    * rMake's pygtk dependencies are split out into a :gtk component. (RMK-177)

  o Server Changes:
    * Added 'rmake-server reset' command, to delete the entire contents
      of the rmake internal repository as well as the job list.
    * Change repository to be based off of hostname.
    * Added the ability to use an external repository for as the internal
      rMake repository by specifying the serverName, serverUrl and user 
      parameters (RMK-165).
    * Added a useTmpfs configuration option.  If used, the build will
      be done on a tmpfs filesystem within the chroot. (RMK-163)

  o Bug Fixes:
    * Don't include the trove's label in the search path automatically -
      let the user do that explicitly.
    * Don't die if /etc/localtime doesn't exist (RMK-126)
    * Fix password prompter to work with contexts (RMK-89)
    * Fix dep resolution handling of cases where more than one
      trove of different flavors in a group could resolve buildreq (RMK-152).
    * Resolve troves no longer show up in the resolve trove list twice.
    * 'rmake build' without any troves returns a usage message (RMK-155).
    * In some cases rMake must choose between x86 and x86_64 troves that
      both solve intraTrove dependencies but conflict.  In this case,
      conary should pick one using normal dep resolution rules.
    * If the rMake internal repository cannot start or if it dies, the
      rMake server will shut down (RMK-185).
    * rMake now handles cooks that die due a signal (a segfault, e.g.)
      gracefully (RMK-181).
    * rMake will now fail cooks when it runs into an internal error, in the
      cook checking code.  The cook will be stopped at that point (RMK-179).
    * When a needed file cannot be copied into the chroot, rMake will now
      fail with a user-friendly error (RMK-156).

Changes in 0.5 (BETA):
  We are now calling this the BETA of rMake 1.

  o Client Changes:
    * rMake now supports a password helper for its xml interface, that
      will pop up a gui window to ask you for username/passord (RMK-89)
    * rMake now supports a "reset" option (RMK-5).
    * allow resolveTroves entries to be ordered (RMK-59).
    * tell users to look at the buildlog when their chroot server didn't
      start. (RMK-116)

  o Bug Fixes:
    * Fixed a bug in commit behavior where builds with troves on different 
      branches would not commit all troves from that build (RMK-106).
    * You can now cook recipes with flavors
    * Fixed a bug where trying to commit a failed job would result in the
      job's state being set to BUILT (RMK-113)
    * rmake start should not return STARTED unless the start is actually
      successful (RMK-111)
    * rmake now setuids before killing processes both ensure no incorrect
      processes are killed and also to make sure logfile is owned by the right
      user. (RMK-102)
    * Stopping a job will set all troves in "INIT" state to failed (RMK-83)
    * Fixed a bug that kept building from groups from working. (RMK-118)
    * Don't traceback with IOError on broken pipe (RMK-120)

Changes in 0.4:
  o Client Changes:
    * The rMake server now tracks a "Committing" and "Committed" state.
      It will send out state updated messages to subscribers when committing
      troves (RMK-54).
    * Added support for a stop command (RMK-76).
    * Subscribers are now passed an apiVersion as the first parameter, allowing
      their behavior to change based on the version of rmake they are
      dealing with (RMK-77)

  o Bug Fixes:
    * Fixed bug that caused rmake to fail to build troves with names that were 
      2 characters long (RMK-86)
    * Environment variables in configurations are now expanded before they
      are sent over to the server, since the environment there isn't the
      same (Requires conary 1.0.21 or newer) (RMK-80)
    * Handle unicode in logs from builds by converting to escaped utf-8 
      (RMK-91)
    * Do a better job of updating internal shadow to source changes
      when performing a cook of a local file.  Adds and removes are now
      handled correctly. (RMK-95)
    * rmake commands now print an error message when passed an invalid 
      jobId or UUID (RMK-101)
    * rMake's home directory in the build chroot is now set to something
      that rmake can write to.

Changes in 0.3:
  o Client Changes:
    * rMake can now perform builds using local Conary recipes and
      sources.  If the recipe is associated with a source component,
      you can commit the source component and binary together.  This
      association is determined through the CONARY file, which is
      normally created by running "cvc checkout".  The CONARY file and
      the conary recipe file must be in the same directory.  This
      feature requires Conary 1.0.19. (RMK-40)
    * rMake supports a specifying a uuid with a build, needed for integrating 
      rMake with rBuilder Online (RMK-73)
    * Slightly delay output of emit events in order to collate them

  o Bug Fixes:
    * rMake now uses the "buildLabel" and "buildFlavor" configuration
      variables to find troves to build, and "installLabelPath" and
      "flavor" variables to find solutions to build
      dependencies. (RMK-53)
    * The "/sbin/service rmake status" status message has been
      fixed. Thanks to David Coulthart for the bug report and fix. (RMK-69)
    * The default use flag and policy directories are now copied into
      the build chroot so that locally defined use flags and policies
      are available to build against. (RMK-68)
    * Build requirement dependency resolution is now calculated by the
      rMake client instead of the rMake server. (RMK-46, RMK-60)
    * Newly created checkouts (created with the cvc newpkg command) can now be
      cooked (RMK-81)
    * chroothelper would access nonexistant variable and segfault on cleanup,
      now all chroothelper exit statuses are checked (RMK-66)

Changes in 0.2:
  o Client Changes:
    * Query output fixup: only display the full list of troves for a job 
      when no trove is specified.
    * Add rmake q <jobId> --poll for convenience

  o Bug Fixes:
    * Fixed traceback if reading conary config results in a parse error
    * Improved traceback output message
    * rMake no longer tries to sign troves at build time, since passwords 
      cannot be read at that time.
    * rmake changeset and rmake commit were broken
    * a change in conary caused rmake builds to fail with conary 1.0.18.

Changes in 0.1:
    * Initial test release
